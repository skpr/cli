project_name: skpr

version: 2

builds:
  - id: skpr-cli
    main: ./cmd/skpr
    binary: skpr
    ldflags:
      - -extldflags '-static' -X github.com/skpr/cli/cmd/skpr/version.GitVersion={{.Version}} -X github.com/skpr/cli/cmd/skpr/version.BuildDate={{time "2006-01-02"}}
    env:
      - CGO_ENABLED=0
    goos: [ linux, darwin ]
    goarch: [ amd64, arm64 ]

  - id: skpr-rsh
    main: ./cmd/skpr-rsh
    binary: skpr-rsh
    ldflags:
      - -extldflags '-static'
    env:
      - CGO_ENABLED=0
    goos: [ linux, darwin ]
    goarch: [ amd64, arm64 ]

archives:
  - id: nix
    builds: [ skpr-cli, skpr-rsh ]
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ if eq .Os "darwin" }}macOS{{ else }}{{ .Os }}{{ end }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    wrap_in_directory: true
    format: tar.gz
    files:
      - ./share/man/man1/skpr*.1

release:
  prerelease: auto
  name_template: "Skpr CLI {{.Version}}"
  github:
    owner: skpr
    name: cli

brews:
  - name: skpr
    repository:
      owner: skpr
      name: homebrew-taps
    commit_author:
      name: skprbot
      email: skprbot@skpr.io
    homepage: https://www.skpr.io
    description: CLI for the Skpr Hosting Platform
    dependencies:
      - name: rsync
        type: optional
      - name: docker
        type: optional
    install: |
      bin.install "skpr"
      bin.install "skpr-rsh"

      # Install bash completion
      output = Utils.safe_popen_read("#{bin}/skpr", "--completion-script-bash")
      (bash_completion/"skpr").write output

      # Install zsh completion
      output = Utils.safe_popen_read("#{bin}/skpr", "--completion-script-zsh")
      (zsh_completion/"_skpr").write output

nfpms:
  - license: GPL-3.0
    maintainer: Skpr
    homepage: https://www.skpr.io
    recommends: [ rsync, docker.io ]
    description: CLI for the Skpr Hosting Platform
    builds: [ skpr-cli, skpr-rsh ]
    formats: [ deb, rpm ]
